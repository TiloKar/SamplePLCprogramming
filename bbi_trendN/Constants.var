VAR CONSTANT
	BAT_W_STP_init : USINT := 0;
	BAT_R_STP_wait : USINT := 0;
	BAT_R_STA_waiting : USINT := 0; (*warte auf befehl, wenn alter befehl mit 0 quittiert wurde: ERFOLG*)
	BATCH_STARTED : USINT := 0;
	BAT_D_STA_waiting : USINT := 0;
	BAT_D_STP_wait : USINT := 0;
	BAT_W_STA_waiting : USINT := 0;
	BAT_D_STP_getInfo : USINT := 1;
	BAT_W_STA_initializing : USINT := 1;
	BAT_W_STP_open : USINT := 1;
	BAT_D_STA_gettingInfo : USINT := 1;
	BAT_W_STP_create : USINT := 2;
	BAT_R_STP_createDir : USINT := 2;
	BAT_D_STA_reading : USINT := 2;
	BAT_D_STP_read : USINT := 2;
	BAT_W_STA_recording : USINT := 2;
	BAT_W_STP_read_header : USINT := 3;
	BAT_D_STP_error : USINT := 3;
	BAT_D_STA_error : USINT := 3;
	BAT_R_STP_createCSV : USINT := 3;
	BAT_W_STA_starting : USINT := 3;
	BAT_R_STA_preparing : USINT := 3; (*einmalige Header checks der Rohdaten und Anlegen der CSV Kopfzeilen*)
	BAT_R_STA_unzipping : USINT := 4; (*Entpacke Daten*)
	BAT_R_STP_readData : USINT := 4;
	BAT_W_STA_stopping : USINT := 4;
	BAT_W_STP_write_header : USINT := 4;
	BAT_R_STA_newCSVfile : USINT := 5; (*alte CSV Datei schließen, neue CSV Datei öffnen*)
	BAT_R_STP_CSVfullHeader : USINT := 5;
	BAT_W_STP_write_data : USINT := 6;
	BAT_R_STP_CSVsmallHeader : USINT := 6;
	BAT_R_STA_closing : USINT := 7; (*CSC Datei Schließen und Status OK*)
	BAT_W_STP_get_offset : USINT := 7;
	BAT_R_STA_closingError : USINT := 8; (*CSC Datei Schließen nach Status Fehler*)
	BAT_R_STP_unzipCheck : USINT := 8;
	BAT_R_STA_closingAbort : USINT := 9; (*CSC Datei Schließen nach Abbruchbefehl*)
	BAT_D_LISTSLOTS : USINT := 9;
	BAT_R_STP_unzip : USINT := 9;
	BAT_R_CMD_trend : USINT := 10;
	BAT_R_STP_writeCSV : USINT := 10;
	BAT_W_STP_wait : USINT := 10;
	BAT_W_CMD_start : USINT := 10;
	BAT_R_STP_closeCSV : USINT := 12;
	BAT_W_CMD_stop : USINT := 20;
	BAT_R_CMD_csvFull : USINT := 20;
	BAT_W_STP_close : USINT := 20;
	BAT_W_STP_closeRec : USINT := 21;
	BAT_W_STP_dir : USINT := 22;
	BAT_R_CMD_csvSmall : USINT := 30;
	DATA_LINE_STARTCHAR2 : USINT := 35;
	DATA_LINE_STARTCHAR5 : USINT := 35;
	DATA_LINE_STARTCHAR4 : USINT := 36;
	DATA_LINE_STARTCHAR3 : USINT := 37;
	DATA_LINE_STARTCHAR1 : USINT := 38;
	DATA_LINE_ENDCHAR : USINT := 47;
	EVENT_W_STP_open : USINT := 51;
	EVENT_W_STP_dir : USINT := 52;
	EVENT_W_STP_create : USINT := 53;
	EVENT_W_STP_write_first : USINT := 54;
	EVENT_W_STP_write_header : USINT := 55;
	EVENT_W_STP_closeRec : USINT := 56;
	EVENT_W_STP_read_header : USINT := 57;
	EVENT_W_STP_get_offset : USINT := 58;
	EVENT_W_STP_error : USINT := 59;
	EVENT_W_STP_write_data : USINT := 60;
	EVENT_W_STP_close : USINT := 61;
	BAT_R_CMD_abort : USINT := 90;
	BAT_R_STA_error : USINT := 99; (*Fehler, siehe error struct*)
	BAT_W_STA_error : USINT := 99;
	BAT_W_STP_error : USINT := 99;
	BAT_R_STP_error : USINT := 99;
	BATCH_FINALIZED : USINT := 255;
	TRENDITEMS : UINT := 719; (*Anzahl der Bildpunkte / CSV - Datenzeilen*)
	BATCH_OFFSETSEARCH : UDINT := 1000;
	MAX_CHAR_CSV_ROW : UDINT := 4000; (*Maximalanzahl an Zeichen für entpackte Datenzeile die noch im CSV Schreibpuffer frei sein muss*)
	MAX_LINES_CSV : UDINT := 30000; (*Maximalanzahl an CSV Zeilen*)
	BAT_R_BUFSIZE : UDINT := 51200; (*Größe des Lesepuffers für Rohdaten*)
	CSV_W_BUFSIZE : UDINT := 51200; (*Größe des CSV Schreibpuffers*)
	TRENDPARTSIZE : UDINT := 31457280; (*Größe der DRAM Partition für Trend-Rohdatenabbild, 30 MB*)
	BATCH_GENERATOR : UDINT := 548942248;
	BAT_D_VIEWSLOTS : UDINT := BAT_D_LISTSLOTS+1;
END_VAR
(**)
